var UITreeview = function () { var a = function () { $("#tree").dynatree({}), $("#tree2").dynatree({ onActivate: function (a) { alert("You activated " + a.data.title) }, children: [{ title: "Item 1" }, { title: "Folder 2", isFolder: !0, key: "folder2", children: [{ title: "Sub-item 2.1" }, { title: "Sub-item 2.2" }] }, { title: "Item 3" }] }), $("#tree3").dynatree({ initAjax: { url: "assets/json/dynatree/sample-data1.json" }, onLazyRead: function (a) { a.appendAjax({ url: "assets/json/dynatree/sample-data2.json", debugLazyDelay: 750 }) }, dnd: { preventVoidMoves: !0, onDragStart: function (a) { return !0 }, onDragEnter: function (a, b) { return a.parent !== b.parent ? !1 : ["before", "after"] }, onDrop: function (a, b, c, d, e) { b.move(a, c) } } }); var a = [{ title: "item1 with key and tooltip", tooltip: "Look, a tool tip!" }, { title: "item2: selected on init" }, { title: "Folder", isFolder: !0, key: "id3", children: [{ title: "Sub-item 3.1", children: [{ title: "Sub-item 3.1.1", key: "id3.1.1" }, { title: "Sub-item 3.1.2", key: "id3.1.2" }] }, { title: "Sub-item 3.2", children: [{ title: "Sub-item 3.2.1", key: "id3.2.1" }, { title: "Sub-item 3.2.2", key: "id3.2.2" }] }] }, { title: "Document with some children (expanded on init)", key: "id4", children: [{ title: "Sub-item 4.1 (active on init)", activate: !0, children: [{ title: "Sub-item 4.1.1", key: "id4.1.1" }, { title: "Sub-item 4.1.2", key: "id4.1.2" }] }, { title: "Sub-item 4.2 (selected on init)", select: !0, children: [{ title: "Sub-item 4.2.1", key: "id4.2.1" }, { title: "Sub-item 4.2.2", key: "id4.2.2" }] }, { title: "Sub-item 4.3 (hideCheckbox)", hideCheckbox: !0 }, { title: "Sub-item 4.4 (unselectable)", unselectable: !0 }] }]; $("#tree4").dynatree({ checkbox: !0, classNames: { checkbox: "dynatree-radio" }, selectMode: 1, children: a, onActivate: function (a) { $("#echoActive1").text(a.data.title) }, onSelect: function (a, b) { var c = b.tree.getSelectedNodes().join(", "); $("#echoSelection1").text(c) }, onDblClick: function (a, b) { a.toggleSelect() }, onKeydown: function (a, b) { return 32 == b.which ? (a.toggleSelect(), !1) : void 0 }, cookieId: "dynatree-Cb1", idPrefix: "dynatree-Cb1-" }), $("#tree5").dynatree({ checkbox: !0, selectMode: 2, children: a, onSelect: function (a, b) { var c = b.tree.getSelectedNodes(), d = $.map(c, function (a) { return "[" + a.data.key + "]: '" + a.data.title + "'" }); $("#echoSelection3").text(d.join(", ")) }, onClick: function (a, b) { "title" == a.getEventTargetType(b) && a.toggleSelect() }, onKeydown: function (a, b) { return 32 == b.which ? (a.toggleSelect(), !1) : void 0 }, cookieId: "dynatree-Cb2", idPrefix: "dynatree-Cb2-" }), $("#tree6").dynatree({ initAjax: { url: "assets/json/dynatree/sample-data1.json" }, onLazyRead: function (a) { a.appendAjax({ url: "assets/json/dynatree/sample-data2.json", debugLazyDelay: 750 }) }, dnd: { preventVoidMoves: !0, onDragStart: function (a) { return !0 }, onDragEnter: function (a, b) { return a.parent !== b.parent ? !1 : ["before", "after"] }, onDrop: function (a, b, c, d, e) { b.move(a, c) } } }) }; return { init: function () { a() } } }();